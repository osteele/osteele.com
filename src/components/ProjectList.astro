---
import type { Project } from "../data/projects.types";
import type { ProjectType, Section } from "../lib/sections";
import { getProjectsByCategory } from "../lib/sections";
import ProjectSection from "./ProjectSection.astro";

// Props are referenced in the template
const { sections = [], projects = [], projectType, showTypeLabels = false } = Astro.props;

// Pre-filter sections to only include those with projects
const sectionsWithProjects = sections.filter((section) => {
	const projectData = getProjectsByCategory(section, projectType, projects || []);
	return (
		projectData.sectionProjects.length > 0 ||
		Array.from(projectData.subsectionProjects.values()).some((arr) => arr.length > 0)
	);
});
---

<div>
  <!-- Navigation tabs for sections with projects -->
  <nav class="flex overflow-x-auto pb-2 hide-scrollbar">
    <div class="flex space-x-4">
      {sectionsWithProjects.map((section) => (
        <a
          href={`#${section.id}`}
          class={`whitespace-nowrap px-3 py-2 rounded-lg text-sm font-medium 
            bg-gradient-to-r ${section.color}/5 hover:${section.color}/10 
            dark:bg-gradient-to-r dark:${section.color}/10 dark:hover:${section.color}/20 
            transition-all duration-200`}
        >
          <span class={`bg-gradient-to-r ${section.titleColor} bg-clip-text text-transparent`}>
            {section.name}
          </span>
        </a>
      ))}
    </div>
  </nav>

  <!-- Project sections -->
  <div class="mt-8">
    {sections.map((section) => {
      const projectData = getProjectsByCategory(section, projectType, projects || []);
      // Only render section if it has projects
      if (projectData.sectionProjects.length === 0 &&
          Array.from(projectData.subsectionProjects.values()).every(arr => arr.length === 0)) {
        return null;
      }

      return (
        <ProjectSection
          section={section}
          projectData={projectData}
          showTypeLabels={showTypeLabels}
        />
      );
    })}
  </div>
</div>