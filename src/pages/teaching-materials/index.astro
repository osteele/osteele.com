---
import PageLayout from "@/components/PageLayout.astro";
import SectionNav from "@/components/SectionNav.astro";
import TeachingBanner from "@/components/TeachingBanner.astro";
import Layout from "@/layouts/Layout.astro";

// Define data structures
interface Project {
	name: string;
	url: string;
	description: string;
}

interface Section {
	id: string;
	name: string;
	color: string;
	titleColor: string;
	description: string;
	subsections?: { name: string }[];
}

const Sections: Section[] = [
	{
		id: "courses",
		name: "Course Materials",
		color: "from-amber-500",
		titleColor: "from-amber-500 to-amber-300",
		description: "Course notes and teaching materials.",
		subsections: [{ name: "Creative Coding" }, { name: "Physical Computing" }, { name: "Other Courses" }],
	},
	{
		id: "tools",
		name: "Educational Software",
		color: "from-blue-500",
		titleColor: "from-blue-500 to-blue-300",
		description: "Interactive tools and visualizations for learning.",
		subsections: [{ name: "Programming Tools" }, { name: "Teaching Tools" }],
	},
];

function getProjectsByCategory(category: string, subcategory?: string): Project[] {
	if (category === "courses") {
		switch (subcategory) {
			case "Creative Coding":
				return [
					{
						name: "JavaScript and P5.js",
						url: "https://notes.osteele.com/p5js",
						description: "JavaScript resources, arrays, p5.js tutorials and examples, and VS Code setup for p5.js",
					},
					{
						name: "PoseNet Resources",
						url: "https://notes.osteele.com/posenet",
						description: "Resources for working with PoseNet in p5.js",
					},
				];
			case "Physical Computing":
				return [
					{
						name: "Arduino",
						url: "https://notes.osteele.com/arduino",
						description: "Arduino programming and physical computing resources",
					},
					{
						name: "Raspberry Pi",
						url: "https://notes.osteele.com/raspberry-pi",
						description: "Raspberry Pi setup and programming guides",
					},
				];
			case "Other Courses":
				return [
					{
						name: "Woodworking for Art and Design",
						url: "https://notes.osteele.com/courses",
						description: "Course materials for Woodworking at NYU Shanghai",
					},
					{
						name: "Movement Practices",
						url: "https://notes.osteele.com/courses",
						description: "Course materials for Movement Practices and Computing",
					},
				];
		}
	}
	if (category === "tools") {
		switch (subcategory) {
			case "Programming Tools":
				return [
					{
						name: "Educational Software Collection",
						url: "/topics/computer-education",
						description: "View my collection of educational software, tools, and visualizations for computer science",
					},
				];
			case "Teaching Tools":
				return [
					{
						name: "Course Notes",
						url: "https://notes.osteele.com",
						description: "Collection of course notes and teaching materials",
					},
				];
		}
	}
	return [];
}
---

<Layout title="Teaching Materials">
  <PageLayout title="Teaching Materials">
    <TeachingBanner />

    <div class="container">
      <div class="grid w-full grid-cols-2 mb-8 p-1 bg-gray-100/50 dark:bg-gray-800/50 rounded-lg">
        <a
          href="/teaching/courses"
          class="px-8 py-3 hover:bg-gray-50 dark:hover:bg-gray-800 transition-all text-center"
        >
          Courses
        </a>
        <a
          href="/teaching-materials"
          class="px-8 py-3 bg-white dark:bg-gray-700 shadow-sm transition-all text-center"
        >
          Educational Materials
        </a>
      </div>

      <SectionNav sections={Sections} defaultSection="courses" />

      <div class="space-y-6">
        {Sections.map((section) => (
          <section
            id={section.id}
            class="mb-12 scroll-mt-20"
          >
            <div
              class={`relative rounded-lg bg-gradient-to-r ${section.color}/20 to-transparent p-6`}
            >
              <h2
                class={`text-3xl font-bold mb-2 bg-gradient-to-r ${section.color} bg-clip-text text-transparent`}
              >
                {section.name}
              </h2>
              <p class="text-gray-600 dark:text-gray-400 mb-6 text-lg">
                {section.description}
              </p>

              <div class="grid gap-6 max-w-3xl">
                {section.subsections?.map((subsection) => {
                  const projects = getProjectsByCategory(section.id, subsection.name);
                  if (projects.length === 0) return null;

                  return (
                    <div
                      class="bg-white/70 dark:bg-gray-800/70 rounded-lg backdrop-blur-sm border border-gray-200 dark:border-gray-700 shadow-sm"
                    >
                      <div class="p-6">
                        <h3 class="text-xl font-semibold mb-4 text-gray-800 dark:text-gray-100">
                          {subsection.name}
                        </h3>
                        <div class="space-y-4">
                          {projects.map((project) => (
                            <div>
                              <a
                                href={project.url}
                                class="text-blue-600 dark:text-blue-400 hover:underline font-medium"
                              >
                                {project.name}
                              </a>
                              <p class="text-gray-600 dark:text-gray-300 mt-1">
                                {project.description}
                              </p>
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          </section>
        ))}
      </div>
    </div>
  </PageLayout>
</Layout>
